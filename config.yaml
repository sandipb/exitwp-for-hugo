
# Relative path to the top of the target blog. If images are downloaded, the
# URLs in the posts will be modified to point to blog_prefix/images/xxx.
blog_prefix: ""

# The directory where exitwp looks for wordpress export xml files.
wp_exports: wordpress-xml

# The target directory where all output is saved.
build_dir: build

# Output format: primary choices are html or markdown.
target_format: markdown

# The date format of the wikipedia export file.
# I'm not sure if this ever differs depending on wordpress localization.
# Wordpress is often so full of strange quirks so I wouldnt rule it out.
date_format: '%Y-%m-%d %H:%M:%S'

# Try to download and reloacate all images locally to the blog.
download_images: true

# Parent directory for item types
item_type_parent_path:
  post: post
  page: ""

# Item types we don't want to import.
item_type_filter: {attachment, nav_menu_item}

# exclude by filtering on any field type on the post.
# For example, you can exclude based on field "status" set to "draft"
# item_field_filter: {status: draft}
item_field_filter: {}

# Map wordpress item status to Hugo header content
item_field_map:
  status:
    # If status of an item is private, make the yaml header 'draft' to be True
    private:
      draft: True
      wp_status: private  # to distinguish from genuine drafts

taxonomies:
  # Exclude taxonomies.
  filter: {}
  # Exclude taxonomies entries.
  # entry_filter: {category: Uncategorized}
  entry_filter: {}
  # Rename taxonomies when writing jekyll output format.
  name_mapping: {category: categories, post_tag: tags}

# Replace certain patterns in body
# Simply replace the key with its value
body_replace: {
  # '<pre.*?lang="(.*?)".*?>': '\n{% codeblock \1 lang:\1 %}\n',
  # '<pre.*?>': '\n{% codeblock %}\n',
  # '</pre>': '\n{% endcodeblock %}\n',

#    '[python]': '{% codeblock lang:python %}',
#    '[/python]': '{% endcodeblock %}',
}
